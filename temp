VECHUKO("Eval block:"):
VECHUKO(""):

KANNA_n:
KANNA_m:
(5+5)*3 SOLRAN KANNA_n SEIRAN:
9+KANNA_n SOLRAN KANNA_m SEIRAN:

VECHUKO("Kanna_n: "):
VECHUKO(KANNA_n):
VECHUKO(""):
VECHUKO("KANNA_m: "):
VECHUKO(KANNA_m):
VECHUKO(""):

VECHUKO("Jump block:"):
VECHUKO(""):
ORUVELA ((KANNA_n - 10) < 0) {
    VECHUKO("kanna_n < 10"):
}
ILLENA {
    VECHUKO("Kanna_n > 10"):
}

VECHUKO(""):
NA (0 SOLRAN KANNA_n SEIRAN:) VAATI SONNA (KANNA_n < 5:) VAATI SONNA MAARI (KANNA_n + 1 SOLRAN KANNA_n SEIRAN:) {
  VECHUKO(KANNA_n):
  VECHUKO(" "):
}

VECHUKO("Function block:"):
VECHUKO(""):

KANNA_fib(KANNA_n){
  ORUVELA (KANNA_n == 0){
    ITHU EPDI IRUKU 0:
  }
  ORUVELA (KANNA_n <= 1){
    ITHU EPDI IRUKU KANNA_n:
  }
  ITHU EPDI IRUKU KANNA_fib(KANNA_n-1) + KANNA_fib(KANNA_n-2):
}

VECHUKO("Printing Fibonacci sequence from 0 to 20..."):
VECHUKO(""):

KANNA_n:

NA (0 SOLRAN KANNA_n SEIRAN:) VAATI SONNA (KANNA_n < 20:) VAATI SONNA MAARI (KANNA_n + 1 SOLRAN KANNA_n SEIRAN:) {
  VECHUKO(KANNA_fib(KANNA_n)):
  VECHUKO(" "):
}

VECHUKO(""):


// second code

KANNA_fib(KANNA_n){
  ORUVELA (KANNA_n == 0){
    ITHU EPDI IRUKU 0:
  }
  ORUVELA (KANNA_n <= 1){
    ITHU EPDI IRUKU KANNA_n:
  }
  ITHU EPDI IRUKU KANNA_fib(KANNA_n-1) + KANNA_fib(KANNA_n-2):
}

KANNA_j:
KANNA_y:
30 SOLRAN KANNA_j SEIRAN:


NA (1 SOLRAN KANNA_y SEIRAN:) VAATI SONNA (KANNA_y < KANNA_j:) VAATI SONNA MAARI (KANNA_y + 1 SOLRAN KANNA_y SEIRAN:) {
  VECHUKO(KANNA_fib(KANNA_y)):
  VECHUKO(" "):
}

KANNA_swap(KANNA_i,KANNA_j){
    KANNA_temp:
    KANNA_arr[KANNA_i] SOLRAN KANNA_temp SEIRAN:
    KANNA_arr[KANNA_j] SOLRAN KANNA_arr[KANNA_i] SEIRAN:
    KANNA_temp SOLRAN KANNA_arr[KANNA_i] SEIRAN:
}

KANNA_bubble(){
    KANNA_i:
    KANNA_j:
    NA ( 0 SOLRAN KANNA_i SEIRAN: ) VAATI SONNA (  KANNA_i < KANNA_n: ) VAATI SONNA MAARI ( KANNA_i+1 SOLRAN KANNA_i SEIRAN: ) {
        NA ( 0 SOLRAN KANNA_j SEIRAN: ) VAATI SONNA (  KANNA_j < KANNA_i: ) VAATI SONNA MAARI ( KANNA_j+1 SOLRAN KANNA_j SEIRAN: ) {
            ORUVELA (KANNA_arr[KANNA_j+1] < KANNA_arr[KANNA_j]) {
              KANNA_swap(KANNA_j+1,KANNA_j):
            }
        }
    }   
    ITHU EPDI IRUKU 0:
}

KANNA_bubble():

NA ( 0 SOLRAN KANNA_i SEIRAN: ) VAATI SONNA (  KANNA_i < KANNA_n: ) VAATI SONNA MAARI ( KANNA_i+1 SOLRAN KANNA_i SEIRAN: ){
    VECHUKO(KANNA_arr[KANNA_i]):
}

/////
KANNA_part(KANNA_low,KANNA_high,KANNA_pi){
    KANNA_arr[KANNA_high] SOLRAN KANNA_pi SEIRAN:
    KANNA_low -1 SOLRAN KANNA_i SEIRAN:
    NA ( KANNA_low SOLRAN KANNA_j SEIRAN: ) VAATI SONNA (  KANNA_j < KANNA_high -1: ) VAATI SONNA MAARI ( KANNA_j+1 SOLRAN KANNA_j SEIRAN: ){
        ORUVELA(KANNA_arr[KANNA_j]<KANNA_pi){
            KANNA_i+1 SOLRAN KANNA_i SEIRAN:
            KANNA_swap(KANNA_i,KANNA_j):
        }
    }
    KANNA_swap(KANNA_i+1,KANNA_high):
    ITHU EPDI IRUKU KANNA_i+1:
}

KANNA_quick(KANNA_low,KANNA_high,KANNA_pi){
    ORUVELA (KANNA_low < KANNA_high){
        KANNA_part(KANNA_low,KANNA_high,0) SOLRAN KANNA_pi SEIRAN:
        KANNA_quick(KANNA_low,KANNA_pi-1,0):
        KANNA_quick(KANNA_pi,KANNA_high,0):
    }
    ITHU EPDI IRUKU 0:
}

KANNA_quick(0,9,0):